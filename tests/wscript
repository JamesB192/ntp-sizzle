# Copyright the NTPsec project contributors
#
# SPDX-License-Identifier: BSD-2-Clause

import os
from waflib import Utils  # pylint: disable=import-error


def build(ctx):
    testsrc = ctx.srcnode.make_node('tests')
    pylib = ctx.srcnode.make_node('pylib')
    testpylib = testsrc.make_node('pylib')
    testpysrc = testpylib.ant_glob('*.py')

    testpylib.get_bld().mkdir()

    pypath = pylib.get_bld()
    targdir = "tests/pylib"
    linkpath = ctx.bldnode.make_node(targdir + "/ntp").abspath()
    relpath = ("../" * (targdir.count("/")+1)) + pypath.path_from(ctx.bldnode)
    if (not os.path.exists(linkpath)) or os.readlink(linkpath) != relpath:
        try:
            os.remove(linkpath)
        except OSError:
            pass
        os.symlink(relpath, linkpath)

    pytests = ["pylib/test_util.py",
               "pylib/test_agentx.py",
               "pylib/test_agentx_packet.py",
               "pylib/test_ntpc.py",
               "pylib/test_packet.py",
               "pylib/test_statfiles.py"]

    ctx(
        features="subst",
        source=testpysrc,
        target=[x.get_bld() for x in testpysrc],
        chmod=Utils.O755,
    )

    for path in pytests:
        ctx(
            features="py test_scripts",
            test_scripts_source=path,
            test_scripts_template="${PYTHON} ${SRC}",
        )
